name: Extract MuJoCo binary

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Release tag"
        required: true
        type: string
      platform:
        description: "Platform"
        required: true
        type: choice
        options:
          - windows
          - macos
          - linux_arm
          - linux_x86

jobs:
  extract-binary:
    runs-on: ubuntu-latest
    steps:
    - name: Set environment variables
      run: |
        TAG=${{ inputs.tag_name }}

        case ${{ inputs.platform }} in

          windows)
            FINAL_FILE_NAME="mujoco.dll"
            ARCHIVE_FILE_NAME="mujoco-$TAG-windows-x86_64.zip"
            PATH_IN_ARCHIVE="bin\mujoco.dll"
            INSTALL_COMMAND="sudo apt install unzip"
            EXTRACT_COMMAND="unzip $ARCHIVE_FILE_NAME"
            ;;

          macos)
            FINAL_FILE_NAME="mujoco.dylib"
            ARCHIVE_FILE_NAME="mujoco-$TAG-macos-universal2.dmg"
            PATH_IN_ARCHIVE="mujoco.framework/Versions/A/libmujoco.$TAG.dylib"
            INSTALL_COMMAND="sudo apt install dmg2img p7zip-full"
            EXTRACT_COMMAND="dmg2img $ARCHIVE_FILE_NAME archive.img && 7z e archive.img $PATH_IN_ARCHIVE"
            ;;

          linux_arm)
            FINAL_FILE_NAME="libmujoco_arm.so"
            ARCHIVE_FILE_NAME="mujoco-$TAG-linux-aarch64.tar.gz"
            PATH_IN_ARCHIVE="mujoco-$TAG/lib/libmujoco.so.$TAG"
            INSTALL_COMMAND=""
            EXTRACT_COMMAND="tar -xzf $ARCHIVE_FILE_NAME"
            ;;

          linux_x86)
            FINAL_FILE_NAME="libmujoco_x86.so"
            ARCHIVE_FILE_NAME="mujoco-$TAG-linux-x86_64.tar.gz"
            PATH_IN_ARCHIVE="mujoco-$TAG/lib/libmujoco.so.$TAG"
            INSTALL_COMMAND=""
            EXTRACT_COMMAND="tar -xzf $ARCHIVE_FILE_NAME"
            ;;
        esac

        echo "TAG=$TAG" >> $GITHUB_ENV
        echo "FINAL_FILE_NAME=$FINAL_FILE_NAME" >> $GITHUB_ENV
        echo "ARCHIVE_FILE_NAME=$ARCHIVE_FILE_NAME" >> $GITHUB_ENV
        echo "PATH_IN_ARCHIVE=$PATH_IN_ARCHIVE" >> $GITHUB_ENV
        echo "INSTALL_COMMAND=$INSTALL_COMMAND" >> $GITHUB_ENV
        echo "EXTRACT_COMMAND=$EXTRACT_COMMAND" >> $GITHUB_ENV

    - name: Install archive tool
      if: env.INSTALL_COMMAND != ''
      run: $INSTALL_COMMAND

    - name: Download archive
      uses: valitydev/action-download-file@v1
      with:
        url: https://github.com/google-deepmind/mujoco/releases/download/${{ env.TAG }}/${{ env.ARCHIVE_FILE_NAME }}
        target-path: .

    - name: Extract library binary
      run: $EXTRACT_COMMAND

    - name: Log file info
      run: stat "${{ env.PATH_IN_ARCHIVE }}"

    - name: Upload to release
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
        REPO_FULL_NAME: ${{ github.repository }}
      run: |
        # workaround for gh bug
        # https://github.com/cli/cli/issues/9072#issuecomment-2106065080
        git init -b main
        git remote add origin "https://github.com/$REPO_FULL_NAME"

        mv "${{ env.PATH_IN_ARCHIVE }}" ${{ env.FINAL_FILE_NAME }}
        gh release upload upm-${{ env.TAG }} ${{ env.FINAL_FILE_NAME }}
